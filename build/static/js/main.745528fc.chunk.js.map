{"version":3,"sources":["components/Filter.js","services/personService.js","components/Editablefield.js","components/Content.js","components/AddPerson.js","components/Notification.js","App.js","index.js"],"names":["Filter","setter1","setter2","keyword","data","resultList","setResultList","setSearching","setSearchTerm","name","defaultValue","onChange","event","persist","target","value","res","filter","person","toLowerCase","includes","console","log","onBlur","db","axios","get","then","response","newObject","post","catch","error","setNotification","id","put","delete","EditableField","updater","useState","editingValue","setEditingValue","type","onKeyDown","key","obj","blur","trim","Content","state","setter","remover","setPersons","updateData","personService","result","map","f","phone","onClick","length","p","AddPerson","onSubmit","Notification","message","className","App","values","setValues","errors","searchTerm","searching","isLoading","setLoading","notification","persons","useEffect","personData","preventDefault","newPerson","Object","alert","concat","setTimeout","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.745528fc.chunk.js","sourcesContent":["const Filter = ({setter1, setter2, keyword, data, resultList, setResultList}) => {\n\n\n    const setSearching = setter1\n    const setSearchTerm = setter2\n\n    const filter = () => {\n\n        const res = data.filter(person => (\n        \n            person.name.toLowerCase().includes(keyword.toLowerCase())\n            \n        ))\n        debugger;\n\n        setResultList(res)\n\n    }\n\n    const handleSearch= (event) => {\n\n        event.persist()\n    \n        let name= event.target.name\n        let value = event.target.value\n    \n        setSearchTerm(value)\n        setSearching(true)\n\n        if(value === '') \n        {\n            setResultList(data)\n            setSearching(false)\n        }\n        else {\n\n            filter()\n\n            console.log('filtered value is ', resultList)\n            console.log('Searching for: ', value)\n        }\n        \n        }\n\n    const onBlur = (event) => {\n\n        if (event.target.value === '')\n\n        setSearching(false)\n    }\n\n\n    return (\n\n        <div>\n        <input name=\"search\" defaultValue='' onChange={handleSearch} onBlur={onBlur}/><br/>\n        </div>\n    )\n\n}\nexport default Filter","import axios from 'axios'\n\nconst db = 'api/persons'\n\nconst getAll = () => {\n\n    const request = axios.get(db).then(response => response.data)\n\n    return request\n}\n\nconst create = newObject => {\n\n    const request = axios.post(db, newObject)\n    return request.then(response => response.data)\n    .catch(error => {\n\n        setNotification(error)\n    })\n\n}\n\nconst update = (id, newObject) => {\n\n    const request = axios.put(`${db}/${id}`, newObject)\n    return request.then(response => response.data)\n    \n}\n\nconst remove = (id) => {\n\n    const request = axios.delete(`${db}/${id}`)\n    return request.then(response => response.data)\n\n}\n\nexport default { getAll, create, update, remove }","import { useState } from 'react'\n\n\nconst EditableField = ({name, value, id, updater}) => {\n\n    const [editingValue, setEditingValue] = useState(value)\n\n    const onChange = (event) => {\n\n        setEditingValue(event.target.value)\n    }\n\n    const onKeyDown = (event) => {\n\n        if (event.key === \"Enter\" || event.key === \"Escape\") {\n\n            const obj = {[event.target.name] : editingValue}\n\n            console.log(obj)\n\n            updater(event.target.id, obj)\n\n            event.target.blur()\n\n            \n              }\n\n        }\n\n    const onBlur = (event) => {\n\n        if (event.target.value.trim() === \"\") {\n\n            setEditingValue(value)\n        }\n        else {\n\n            setEditingValue(event.target.value)\n        }\n        console.log(event.target.id)\n    }\n\n    return (\n        <input type=\"text\"\n        name={name}\n        value={editingValue}\n        id={id}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        />\n    )\n\n\n}\n\nexport default EditableField","import personService from \"../services/personService\"\nimport EditableField from \"./Editablefield\"\n\nimport {useState, useEffect} from 'react'\n\nconst Content = ({state, data, resultList, setter, remover}) => {\n\n  const setPersons = setter\n  const searching = state\n\n  const updateData = (id, obj) => {\n\n    personService.update(id, obj)\n    personService.getAll().then(result => {\n\n      setPersons(result)\n\n    })\n\n  }\n\n  if(searching === true) {\n\n    console.log(resultList)\n\n    const content = resultList.map((f) => (\n    \n    <li key={f.id}>\n      <EditableField name=\"name\" value={f.name} id={f.id} updater={updateData}/>\n      <EditableField name=\"phone\" value={f.phone} id={f.id} updater={updateData}/>\n      <button id={f.id} name={f.name} onClick={remover}>Delete</button>\n      </li>))\n\n    return(content)\n\n    \n  }\n  else {\n\n  return (data.length > 0 ? data.map((p) => (\n  \n  <li key={p.id}>\n    <EditableField name=\"name\" value={p.name} id={p.id} updater={updateData}/>\n    <EditableField name=\"phone\" value={p.phone} id={p.id} updater={updateData}/> \n    <button id={p.id} name={p.name} onClick={remover}>Delete</button>\n    </li>)) : <p>No people to show</p>)\n\n\n  }\n\n     \n\n    \n  }\n  export default Content","const AddPerson = ({onChange, onSubmit}) => {\n\n    return (\n    <form id=\"addPerson\" onSubmit={onSubmit}>\n        <div>\n          <label>Name:</label> <input name=\"user\" defaultValue='' onChange={onChange} /><br/>\n          <label>Phone:</label> <input name=\"phone\" defaultValue='' onChange={onChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n\n}\n\nexport default AddPerson","import './index.css'\n\nconst Notification = ({ message }) => {\n\n    if (message === null)\n    return null\n\n    return (\n\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import { useEffect, useState } from \"react\"\nimport _ from 'lodash'\nimport Filter from './components/Filter'\nimport Content from \"./components/Content\"\nimport AddPerson from \"./components/AddPerson\"\nimport personService from \"./services/personService\"\nimport Notification from \"./components/Notification\"\n\n\n\nconst App = () => {\n\n\n  const [values, setValues] = useState({})\n  const [errors, setErrors] = useState({})\n  const [searchTerm, setSearchTerm] = useState('')\n  const [searching, setSearching] = useState(false)\n  const [isLoading, setLoading] = useState(true)\n  const [notification, setNotification] = useState(null)\n \n \n\n  const [persons, setPersons] = useState([])\n  const [resultList, setResultList] = useState([])\n    \n  \n  useEffect( () => {\n    \n    personService.getAll().then(personData => {\n\n      setPersons(personData)\n      setResultList(persons)\n      setLoading(false)\n    })    \n  },[])\n\n  const handleDelete = (event) => {\n\n    const id=event.target.id\n    const name=event.target.name\n\n    if (window.confirm(`Are you sure you want to delete ${name}`)) {\n\n    personService.remove(id)\n\n    personService.getAll().then(personData => {\n\n      setPersons(personData)\n      setLoading(false)\n    })    \n  }\n}\n\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n\n    const newPerson = { name: event.target[0].value, phone: event.target[1].value}\n    \n    if (newPerson.name !== '') {\n\n        if (Object.values(errors).length > 0) {\n\n            alert(Object.values(errors))\n            return;\n        }\n    \n      personService.create(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setValues({})\n        setNotification(`${newPerson.name} was added`)\n        setTimeout(() => { setNotification(null)}, 5000)\n      })\n      .catch(error => {\n\n        setNotification(error.message)\n        setTimeout(() => setNotification(null), 5000)\n      })\n             \n      \n    }\n    \n  }\n\n\n\n\n\n  const handleChange = (event) => {\n\n    event.persist()\n\n    let name= event.target.name\n    let value = event.target.value\n\n    setSearching(false)\n\n    //validate(event, name, value)\n\n    setValues({...values, [name]: value,})\n\n  }\n\n/*const validate= (event, name, value) => {\n\n    switch (name) {\n\n      case 'user':\n        if (value.length <= 4) {\n\n          setErrors({...errors, username: 'User name should have at least 5 letters'})\n        }\n        else {\n\n          let newObj = _.omit(errors, \"username\")\n          setErrors(newObj)\n        }\n        break;\n      case 'phone':\n\n      if (\n        !new RegExp(/^0\\d{2}\\d{8}$/).test(value)\n      ) \n      {\n        setErrors({...errors, phone: 'Phone number should be formatted as 070-12341234'})\n\n      } else {\n\n        let newObj = _.omit(errors, \"phone\")\n        setErrors(newObj)\n      }\n\n      break;\n\n      default: break;\n    }\n  }*/\n  \n  \n\nif (isLoading === true) {\n\nreturn (\n<p>Loading data...</p>\n)\n}\n\nif (isLoading !== true)\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n\n      <Filter setter1={setSearching} setter2={setSearchTerm} keyword={searchTerm} data={persons} resultList={resultList} setResultList={setResultList}/>\n\n      <h2>Add new</h2>\n      <AddPerson onChange={handleChange} onSubmit={handleSubmit}/>\n      \n      <h2>Numbers</h2>\n      <ul>\n       <Content state={searching} data={persons} resultList={resultList} setter={setPersons} remover={handleDelete}/>\n      \n      </ul>\n     \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}